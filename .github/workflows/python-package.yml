name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_all:      
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: setup.py
    - if: matrix.os == 'ubuntu-latest'
      run: |
        echo "CC=g++" >> $GITHUB_ENV
        echo "CXX=g++" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov coverage-badge coveralls 
        pip install --verbose .
    - name: Test with pytest
      run: |
        python -m pytest tests/ --cov=./src
        coverage json -o test/test_results.json
    - if: matrix.os == 'ubuntu-latest'
      run: |
        COV_RESULT=$(coverage report | tail -c 4)
        echo "COV_RESULT=$(coverage report | tail -c 4)" >> $GITHUB_ENV
    - name: Send coverage report
      run: |
        coveralls --service=github
    - name: Create coverage badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ef42349965f40edf4232737026690c5f
        filename: coverage_info.json
        label: Hello
        message: World
        color: orange
        coverage: $COV_RESULT
    - name: Create status badges
      run: |
        echo "Results for job '${{ matrix.os }} - Python ${{ matrix.python-version }}':"
        echo "Job URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}?check_suite_focus=true#job=${{ github.job }}"
    - name: generate coverage badge
      run: |
        coverage-badge -o coverage-${{ matrix.python-version }}.svg
    - name: Upload badges
      uses: actions/upload-artifact@v1
      with:
        name: upload-status-badges
        path: /home/runner/work/splex/splex/coverage-${{ matrix.python-version }}.svg
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
      #   COVERALLS_SERVICE_NAME: github
  # coveralls:
  #   name: Indicate completion to coveralls.io
  #   needs: build_all
  #   runs-on: ubuntu-latest
  #   container: python:3-slim
  #   steps:
  #   # - name: Finished
  #   #   run: |
  #   #     pip install --upgrade coveralls
  #   #     COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }} coveralls --finish --service=github
  #   #   env:
  #   #     COVERALLS_SERVICE_NAME: github
  #   #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #   #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Coveralls GitHub Action
  #     uses: coverallsapp/github-action@1.1.3
  #     with:
  #       github-token: ${{ secrets.github_token }}
  #       path-to-lcov: tests/lcov.info
  #       parallel-finished: true
  # cibuildwheel: 
  #   needs: build_all  
  #   runs-on: ubuntu-latest 
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel==2.12.0
  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl
