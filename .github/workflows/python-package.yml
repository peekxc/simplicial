name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_all:
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - if: matrix.os == 'ubuntu-latest'
      run: |
          echo "CC=g++" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        pip install --verbose .
    - name: Test with pytest
      run: |
        python -m pytest tests/ --cov=src/ --cov-report lcov:tests/lcov.info
    - name: Send coverage report
      run: |
          coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
        COVERALLS_SERVICE_NAME: github
        COVERALLS_REPO_TOKEN: gjuQ3bu3XuueRECiW1S4j7afxvdNXYGEN
  coveralls:
    name: Indicate completion to coveralls.io
    needs: build_all
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip install --upgrade coveralls
        coveralls --finish
      env:
        COVERALLS_REPO_TOKEN: gjuQ3bu3XuueRECiW1S4j7afxvdNXYGEN
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    # - name: Upload Coverage Results w/ Coveralls.io app
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.github_token }}
    #     path-to-lcov: tests/lcov.info
        
  # build_windows: # Since github cannot figure out how to make a clean API, repeat the same
  #   runs-on: windows-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install pytest
  #       pip install --verbose .
  #   - name: Test with pytest
  #     run: |
  #       python -m pytest tests/
        
  # build_osx: # Since github cannot figure out how to make a clean API, repeat the same
  #   runs-on: macos-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install pytest
  #       pip install --verbose .
  #   - name: Test with pytest
  #     run: |
  #       python -m pytest tests/
  #   # - name: Coveralls GitHub Action
  #   #   uses: coverallsapp/github-action@1.1.3

  # # build_wheels:
  # #   name: Build wheels on ${{ matrix.os }}
  # #   runs-on: ${{ matrix.os }}
  # #   strategy:
  # #     matrix:
  # #       os: [ubuntu-latest, windows-latest, macos-latest]

  # #   steps:
  # #     - uses: actions/checkout@v3
  # #     - uses: actions/setup-python@v4
  # #     - name: Install cibuildwheel
  # #       run: python -m pip install cibuildwheel==2.12.0
  # #     - name: Build wheels
  # #       run: python -m cibuildwheel --output-dir wheelhouse
  # #     - uses: actions/upload-artifact@v3
  # #       with:
  # #         path: ./wheelhouse/*.whl
