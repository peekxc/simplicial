# generics { #splex.generics }

`generics`

## Functions

| Name | Description |
| --- | --- |
| [boundary](#splex.generics.boundary) | Returns the boundary of a simplicial object, optionally signed. |
| [card](#splex.generics.card) | Counts the number of _p_-dimensional simplices of a simplicial object _s_.  |
| [dim](#splex.generics.dim) | Returns the dimension of a simplicial object. |
| [faces](#splex.generics.faces) | Returns the faces of a simplicial object, optionally restricted by dimension. |
| [handle_data](#splex.generics.handle_data) |  |

## boundary { #splex.generics.boundary }

`generics.boundary(s, p=None, oriented=False, **kwargs)`

Returns the boundary of a simplicial object, optionally signed.

If _s_ has an existing method _s.boundary(p, oriented)_, then that method is called with additional keyword args _kwargs_.

Otherwise, the behavior of this function depends on the type-class of _s_. Namely, 
- if _s_ is SimplexLike with dimension _p_, then a generator enumerating _(p-1)_-faces of _s_ is created. 
- if _s_ is ComplexLike, then a sparse boundary matrix whose columns represent boundary chains is returned. 
- if _s_ is FiltrationLike, then a sparse boundary matrix whose columns represent boundary chains in filtration order is returned.
- if _s_ is none of the above but is Sized and Iterable, all len(s)-1 combinations are returned of _s_ are returned. 

TODO: finish this

## card { #splex.generics.card }

`generics.card(s, p=None, **kwargs)`

Counts the number of _p_-dimensional simplices of a simplicial object _s_. 

If _s_ has an existing method _s.card(p)_, then that method is called with additional keyword arguments _kwargs_. 

Otherwise, the behavior of this function depends on the type-class of _s_ and whether _p_ is specified. Namely, 
 - If _s_ is _complex like_, then card(s) returns a tuple containing the number of simplices in _s_ in each dimension, and _card(s, p)_ the number of simplices in _s_ with dimension p.

## dim { #splex.generics.dim }

`generics.dim(s, **kwargs)`

Returns the dimension of a simplicial object.

If _s_ has an existing method _s.dim(...)_, then that method is called with additional keyword arguments _kwargs_.

Otherwise, the behavior of this function depends on the type-class of _s_. Namely, 
- if _s_ is SimplexLike with dimension _p_, then _p_ is returned. 
- if _s_ is ComplexLike, then the largest dimension _p_ of any face in _s_ is returned.
- if _s_ is none of the above but is Sized, len(_s_) - 1 is returned.

## faces { #splex.generics.faces }

`generics.faces(s, p=None, data=False, **kwargs)`

Returns the faces of a simplicial object, optionally restricted by dimension.

If _s_ has an existing method _s.faces(p)_, then that method is called with additional keyword arguments _kwargs_. 

Otherwise, the behavior of this function depends on the type-class of _s_. Namely, 
- if _s_ is SimplexLike, then a generator enumerating _p_-combinations of _s_ is returned. 
- if _s_ is ComplexLike, then a generator enumerating _p_-faces of _s_ (in any order) is returned. 
- if _s_ is FiltrationLike, then a generator enumerating _p_-faces of _s_ in filtration order is returned.
- if _s_ is none of the above but is Sized and Iterable, all combinations of _s_ of length _p+1_ are chained and returned.

## handle_data { #splex.generics.handle_data }

`generics.handle_data(g, data)`